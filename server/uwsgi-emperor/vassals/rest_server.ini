[uwsgi]

set-placeholder = base_dir=/home/anon/eclipse/liclipse/workspace/threatdetectionservice_test
set-placeholder = server_dir=/home/anon/eclipse/liclipse/workspace/threatdetectionservice_test/server
set-placeholder = load_ini=/home/anon/eclipse/liclipse/workspace/threatdetectionservice_test/server/uwsgi-emperor/vassals/rest_server.ini
set-placeholder = plugins_dir=/home/anon/eclipse/liclipse/workspace/threatdetectionservice_test/server/uwsgi-emperor/plugins

socket = %(server_dir)/api/uwsgi.sock
chmod-socket = 664

# use with uwsgitop: http://uwsgi-docs.readthedocs.org/en/latest/StatsServer.html
stats = 127.0.0.1:9998

chdir = %(base_dir)/api
module = rest_server:app

uid = www-data
gid = www-data

# to dynamically scale workers see: http://uwsgi-docs.readthedocs.org/en/latest/Cheaper.html
enable-threads = true
thunder-lock = true
# http://uwsgi-docs.readthedocs.org/en/latest/OffloadSubsystem.html
offload-threads = 1 # one per CPU is a basic start

# harakiri = 30
# respawn processes after serving 5000 requests (avoid memory leaks)
max-requests    = 5000

# clear environment on exit
vacuum = true

# checks python modules every N seconds for changes and autoreloads
# useful in development, avoid in production
# {% if py_autoreload is defined %}
# py-autoreload = 2
# {% endif %}

# disable prior to deployment 
die-on-term = true

# limit-as = 512 # ?? for monitoring memory?

# From the uWSGI mailing list:
# 30-40 MB per worker is pretty normal.
#
# Multithreading:
master = true
processes = 4
threads = 2
thread-stacksize = 512

# Monitoring memory #
# use --reload-on-rss 80 to avoid your app growing up

# plugins-dir = %(plugins_dir)
# plugins = python3,python3.5,logfile
logger = file:%(base_dir)/logs/rest_server_uwsgi.log
